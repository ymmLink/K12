package com.example.demo.dao;

import java.util.List;

import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import com.example.demo.entity.AdminEntity;
import com.example.demo.entity.ApplyAddFriend;
import com.example.demo.entity.Catetree;
import com.example.demo.entity.Chapter;
import com.example.demo.entity.ChatList;
import com.example.demo.entity.Edition;
import com.example.demo.entity.FeedBack;
import com.example.demo.entity.FriendList;
import com.example.demo.entity.GetCoinRecord;
import com.example.demo.entity.Grade;
import com.example.demo.entity.Guanzhu;
import com.example.demo.entity.K12Config;
import com.example.demo.entity.Material;
import com.example.demo.entity.Message;
import com.example.demo.entity.Pharse;
import com.example.demo.entity.Print;
import com.example.demo.entity.Questioncollect;
import com.example.demo.entity.Questions;
import com.example.demo.entity.Shoucang;
import com.example.demo.entity.Subject;
import com.example.demo.entity.Unit;
import com.example.demo.entity.User;
import com.example.demo.entity.Version;
import com.example.demo.entity.Xuehanyu;
import com.example.demo.entity.Xuehanyucategory;
import com.example.demo.entity.Xuehanyudetail;
import com.example.demo.entity.Xueke;
import com.example.demo.entity.Zan;
import com.example.demo.entity.Zujuanquestion;
import com.example.demo.entity.vo.ApplyAddFriendVo;
import com.example.demo.entity.vo.ChapterVo;
import com.example.demo.entity.vo.DynamicVo;
/**
 * 
 * @author ymm
 * 用于mybatis的dao
 *
 */
import com.example.demo.entity.vo.Materialvo;
import com.example.demo.entity.vo.MessageVo;
@Mapper
public interface MDAO {
	boolean addMaterial(Material material);
	boolean addGuanZhu(Guanzhu guanzhu);
	boolean updateGZ(Long userId,Long guanzhuId,int state);
	boolean cancelGuanzhu(Long userId,Long guanzhuId,String now);
	List<User> getGZUser(@Param("userId")Long userId);
	List<Materialvo> getGZMeterial(@Param("uList")List<User> uList,@Param("pageStart")int pageStart,@Param("pageSize")int pageSize);
	int getGZMcount(@Param("uList")List<User> uList);
	int getMcount();
	List<Long> getMidList();
	List<Materialvo> getTJList(@Param("idList")List<Long> idList);
	Guanzhu getGZbyuId(Long uId,Long guanzhuId);
	User getUserById(Long uId);
	int getMcountBylabel(String label);
	List<Materialvo> getMBylabel(@Param("label")String label,@Param("pageStart")int pageStart,@Param("pageSize")int pageSize);
	List<Questions> getQuestionByCon(String[] conList);
	List<Catetree> getGList(int xdid,int chidid,int id);
//	List<Grade> getGList(int subjectId,int parseId,int eId);
	List<Catetree> getCList(int xdid,int chidid);
	List<Catetree> getQCList(int xdid,int chidid,int id);
	List<Edition> getEList(int subjectId,int parseId);
	List<Xueke> getXueke(int parseId);
	List<Subject> getSubject(int parseId);
//	List<Bookcategory> getBCbyBookId(String bookId);
	List<ChapterVo> getChapterVo(Grade grade);
	List<Unit> getUnit(@Param("grade")Grade grade,@Param("chapterOrder")int chapterOrder);
	List<Chapter> getChapter(@Param("grade")Grade grade,@Param("chapterOrder")int chapterOrder,@Param("unitOrder")int unitOrder);
	List<String> getBcName(String bookId);
	List<Zujuanquestion> getQuestionByBC(int xdid,int chidid,int catetreerec,String tableName,int pageStart,int pageSize);
	int getQuestionCount(int xdid,int chidid,int catetreerec,String tableName);
	boolean addQC(Questioncollect qc);
	boolean delQC(int uid,int qid);
	boolean getSCState(int uid,int qid);
	List<Pharse> getMyPharse(int uid);
	List<Subject> getMySubject(int uid,int pharseId);
	//List<Questions> getmyCQ(int uid,int subjectid,int parseId);
	boolean saveAdmin(AdminEntity admin);
	boolean addAdmin(AdminEntity admin);
//	Answer getAnswer(int qid);
	int editUser(User user);
	List<User> getMyFans(Long id);
	Material getMById(Long mId);
	int addSC(Shoucang sc);
	int addMsc(Long mId);
	int addUsc(Long uId);
	int removeSC(Long mId,Long uId);
	int subtractMsc(Long mId);
	int subtractUsc(Long uId);
	int addUGZ(Long uId);
	int addFans(Long uId);
	int substractUGZ(Long uId);
	int substractFans(Long uId);
	int addMPrint(Long mId);
	int addUPrint(Long uId);
	List<Material> getMyMList(Long uId);
	User getUserByCon(User user);
	int addUser(User user);
	List<Materialvo> getMyMCollect(@Param("uId")Long uId,@Param("pageStart")int pageStart,@Param("pageSize")int pageSize);
	List<Xuehanyu> getAllXuehanyu();
	List<Xuehanyucategory> getXCbyId(int cid);
	Xuehanyudetail getXDbyId(int id);
	int getXHYCount(@Param("con")String con);
	List<Xuehanyudetail> getXDList(@Param("con")String con,@Param("pageStart")int pageStart,@Param("pageSize")int pageSize);
	int saveFeedBack(FeedBack fb);
	List<FeedBack> getAllFB();
	List<Material> getMaterialPage(@Param("material")Material material,@Param("pageStart")int pageStart,@Param("pageSize")int pageSize);
	int getMaterialCount(Material material);
	int setMaterialState(int id,int type);
	int addZan(Zan zan);
	int addMzan(Long mId);
	int removeZan(Long mId,Long uId);
	int subtractMzan(Long mId);
	Zan getZan(Long mId,Long uId);
	Shoucang getSC(Long mId,Long uId);
	int getMcountByCon(@Param("con")String con,@Param("label")String label);
	List<Materialvo> getMByCon(@Param("con")String con,@Param("label")String label,@Param("pageStart")int pageStart,@Param("pageSize")int pageSize);
	FriendList getOneFriend(Long uid,Long id);
	int savePrint(Print print);
	List<DynamicVo> getSCDynamic(Long uid);
	List<DynamicVo> getDZDynamic(Long uid);
	List<DynamicVo> getPRDynamic(Long uid);
	List<DynamicVo> getFSDynamic(Long uid);
	List<FriendList> getFList(Long uid);
	List<User> getTJFList(@Param("iidList")List<Integer> iidList);
	int addAAF(ApplyAddFriend aaf);
	int addMessage(Message message);
	List<ApplyAddFriendVo> getAAFList(int uid);
	List<MessageVo> getUMSender(int uid);
	int getChatCount(int uid,int touid);
	List<Message> getChat(@Param("uid")int uid,@Param("touid")int touid,@Param("pageStart")int pageStart,@Param("pageSize")int pageSize);
	int checkAAF(int uid,int auid,int state);
	int addFriendList(int uid,int fid,String createDate);
	int delFL(int uid,int fid);
	int editMessageState(int mid,int state);
	int addCoin(int uid,int number);
	int getCoinCount(@Param("uid")int uid,@Param("type")int type,@Param("today")String today);
	GetCoinRecord getCoinRecord(@Param("uid")int uid,@Param("type")int type,@Param("date")String date);
	int addGetCoinRecord(GetCoinRecord gcr);
	int getGZcount(Long userId);
	List<User> getGZUbyPage(@Param("userId")Long userId,@Param("pageStart")int pageStart,@Param("pageSize")int pageSize);
	int getFScount(Long id);
	List<User> getFSUbyPage(@Param("id")Long id,@Param("pageStart")int pageStart,@Param("pageSize")int pageSize);
	int getUserMCount(Long id);
	List<Material> getMyMPage(Long uId,@Param("pageStart")int pageStart,@Param("pageSize")int pageSize);
	int getMyMCount(Long uid);
	boolean removeUnionId(String unionId);
	boolean removeOfficialOpenId(String officialOpenId);
	Version getVersion();
	boolean setVersion(@Param("versionNow")String versionNow,@Param("versionNext")String versionNext);
	String getLastChatDate(int uid,int toUid);
	List<Xueke> getMyXueke(int uid,int xdid);
	List<Zujuanquestion> getmyCQ(int uid,int xdid,int chidid,String tableName);
	Message getNewChatMessage(int uid,int toUid);
	int getCountUser();
	List<User> getAllTJFList1(@Param("iidList")List<Integer> iidList);
	List<User> getAllTJFList2(int pageStart,@Param("iidList")List<Integer> iidList);
	int editAllMessageState(int uid,int touid,int state);
	boolean addChatList(ChatList cl);
	boolean editChatList(ChatList cl);
	List<MessageVo> getAllMessageList(int uid);
	int getMCount(int uid,int touid);
	boolean removeChat(int uid,int touid);
	List<String> getFontV2(@Param("tableName") String tableName);
	List<Integer> getDulQids(@Param("tableName") String tableName);
	List<Zujuanquestion> getDulRecs(@Param("tableName") String tableName,int id);
	int delDulQ(@Param("tableName") String tableName,int rec);
	int updateQC(int totalCount,int rec);
	List<Materialvo> getSMByCon(@Param("con1")String con1,@Param("label1")String label1,@Param("con2")String con2,@Param("label2")String label2);
	K12Config getK12Config();
	List<Material> getAllMaterial();
	boolean upImagePath(@Param("mid")Long mid,@Param("toPath")String toPath);
}
